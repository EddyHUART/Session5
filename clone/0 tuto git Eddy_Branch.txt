clone -b Eddy_Branch https://github.com/Baltazius/project_phoenix.git

git clone -b Eddy_Branch https://github.com/Baltazius/project_phoenix.git
https://github.com/Baltazius/project_phoenix.git

Naviguez dans le dossier du projet :
cd project_phoenix

1) Basculez directement sur la branche Eddy_Branch :
git checkout Eddy_Branch

2) verif
git branch

3)recupere de branch main et fusionne
git pull origin main

4) nb pour annuler le pull main:
git reset --hard ORIG_HEAD
 
--------------------------
 Ajout dans ma branch.

git add .
git commit -m "update"
git push origin Eddy_Branch

-------------------------
 Ajout dans la branch main :

# Basculer vers la branche main
git checkout main

# Récupérer les dernières mises à jour de la branche main (important pour éviter les conflits)
git pull origin main

# Fusionner votre branche dans main
git merge Eddy_Branch

# Si nécessaire, résoudre les conflits de fusion

# Pousser les changements vers la branche main distante
git push origin main



	
-----------------
Forcer une mise à jour de votre branche "Eddy_Branch" 
à partir de la branche principale (main) en écrasant tous les changements locaux :
 
 
# 1. Assurez-vous d'être sur la branche principale
git checkout main

# 2. Assurez-vous que votre branche principale est à jour
git pull origin main

# 3. Passez à votre branche Eddy_Branch
git checkout Eddy_Branch

# 4. Réinitialisez complètement Eddy_Branch pour qu'elle soit identique à main
git reset --hard main

# 5. Forcez la mise à jour sur le dépôt distant
git push --force origin Eddy_Branch



--------------------------------------
self.root.iconbitmap("../../resources/img/fenix32.ico")
self.root.config(cursor="@../../resources/cursor/bow_handwrite.cur")  # Note use @ to load the .cur


self.play_sound("../../resources/audio/Emotional Music - A Nostalgic Dream.wav")


def import_game_assets(self):  # TODO: Améliorer la boucle
	assets = {
		"hero": "../../resources/img/hero.png",
		"arrow": "../../resources/img/arrow.png",
		"dagger": "../../resources/img/dagger.png",
		"frost_bolt": "../../resources/img/dagger.png",
		"cannon_ball": "../../resources/img/cannonball.png",
		"SquireEnemy": "../../resources/img/SquireEnemy.png",
		"DarkWizardEnemy": "../../resources/img/DarkWizardEnemy.png",
		"MinotaurEnemy": "../../resources/img/MinotaurEnemy.png",
		"DarkKnightEnemy": "../../resources/img/DarkKnightEnemy.png",
		"PhoenixEnemy": "../../resources/img/PhoenixEnemy.png",
		"DragonEnemy": "../../resources/img/DragonEnemy.png"
	}
		
		
		










		
		
-----------------
pour reinit


D'abord, assurez-vous d'être sur la branche Eddy_Branch :
Copygit checkout Eddy_Branch

Réinitialisez votre branche au même état que la branche main :
  reset --hard origin/main

Si vous avez déjà poussé cette branche sur le dépôt distant et souhaitez également mettre à jour la version distante, vous devrez forcer la mise à jour :
Copygit push origin Eddy_Branch --force

Si vous préférez conserver ces modifications mais simplement les supprimer de l'historique Git (par exemple, pour les appliquer plus tard), vous pouvez utiliser :
Copygit stash
Cette commande sauvegarde vos modifications locales et vous permet de les réappliquer plus tard avec git stash apply.
Que souhaitez-vous faire exactement avec ces 8 commits ?













Sur le nouveau PC

Cloner le dépôt:
git clone -b Eddy_Branch https://github.com/Baltazius/project_phoenix.git
 
 
principal 
git clone https://github.com/Baltazius/project_phoenix.git



Si d'autres personnes ont fait des modifications sur GitHub depuis votre dernier clonage ou pull, vous devez synchroniser votre dépôt local avec ces changements avant de pousser vos propres modifications.
Voici comment procéder:




--------------------------------------

Récupérez les modifications distantes:
git pull origin Eddy_Branch

Résolvez les conflits s'il y en a:

Git vous indiquera quels fichiers sont en conflit
Ouvrez ces fichiers dans votre éditeur
Recherchez les marqueurs de conflit (<<<<<<<, =======, >>>>>>>)
Éditez les sections pour combiner les changements correctement
Enregistrez les fichiers



Accéder au dossier du projet:
cd project_phoenix

Basculer sur votre branche (si vous ne travaillez pas sur main/master):
git checkout Eddy_Branch